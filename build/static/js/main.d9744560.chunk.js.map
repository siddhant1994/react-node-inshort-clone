{"version":3,"sources":["Cards.js","config.js","CardList.js","Header.js","SideBar.js","App.js","serviceWorker.js","index.js"],"names":["Cards","article","title","time","author","content","date","image","read_more","className","style","backgroundImage","textDecoration","clas","target","href","config","CardList","props","useState","articles","setArticles","useEffect","language","match","params","category","window","fetch","base_url","then","response","json","catch","e","console","log","length","map","index","key","Header","setSidebar","isSticky","setSticky","ref","useRef","handleScroll","scrollY","addEventListener","removeEventListener","onClick","alt","src","langs","url","name","code","cats","SideBar","sideBar","useParams","langOptions","catOptions","setLanguage","setCategory","display","overflowY","lang","to","catopt","Layout","App","path","component","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.d9744560.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Cards({\n    article: { title, time, author, content, date, image, read_more },\n}) {\n    return (\n        <div className=\"\">\n            <div className=\"news-card z-depth-1\">\n                <div\n                    className=\"news-card-image\"\n                    style={{\n                        backgroundImage: image,\n                    }}\n                ></div>\n                <div className=\"news-card-title news-right-box\">\n                    <a\n                        className=\"clickable\"\n                        style={{ textDecoration: \"underline\" }}\n                    >\n                        <span>{title}</span>\n                    </a>\n                    <div className=\"news-card-author-time news-card-author-time-in-title\">\n                        <a>\n                            <span className=\"short\">short</span>\n                        </a>\n                        by <span className=\"author\">{author}</span> /\n                        <span className=\"time\">{time}</span>\n                        on <span clas=\"date\">{date}</span>\n                    </div>\n                </div>\n                <div className=\"news-card-content news-right-box\">\n                    <div>{content}</div>\n                    <div className=\"news-card-author-time news-card-author-time-in-content\">\n                        <a>\n                            <span className=\"short\">short &nbsp;</span>\n                        </a>\n                        by <span className=\"author\">{author}</span> /\n                        <span\n                            className=\"time\"\n                            content=\"2020-10-06T12:11:23.000Z\"\n                        >\n                            {time}\n                        </span>\n                        on <span className=\"date\">{date}</span>\n                    </div>\n                </div>\n\n                <div className=\"news-card-footer news-right-box\">\n                    <div className=\"read-more\">\n                        read more\n                        <a className=\"source\" target=\"_blank\" href={read_more}>\n                            HERE\n                        </a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Cards;\n","const config = {};\nif (process.env.NODE_ENV === \"development\") {\n    config.base_url = `http://localhost:8081/`;\n} else {\n    config.base_url = `/`;\n}\nexport default config;\n","import React, { useEffect, useState } from \"react\";\nimport Cards from \"./Cards\";\nimport config from \"./config\";\n\nfunction CardList(props) {\n    const [articles, setArticles] = useState([]);\n\n    useEffect(() => {\n        let language = props.match.params.language || \"en\",\n            category = props.match.params.category || \"\";\n\n        window\n            .fetch(\n                `${config.base_url}scrape?language=${language}&category=${category}`\n            )\n            .then((response) => response.json())\n            .then((articles) => setArticles(articles))\n            .catch((e) => console.log(e));\n    }, [props.match.params]);\n\n    return (\n        <div className=\"card__container\">\n            {articles && articles.length ? (\n                articles.map((article, index) => {\n                    return <Cards article={article} key={index} />;\n                })\n            ) : (\n                <p>No articles found in {props.match.params.category}.</p>\n            )}\n        </div>\n    );\n}\nexport default CardList;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport \"./Header.css\";\n\nfunction Header({ setSidebar }) {\n    const [isSticky, setSticky] = useState(false);\n    const ref = useRef(null);\n    const handleScroll = () => {\n        if (window.scrollY > 0) {\n            setSticky(true);\n        } else {\n            setSticky(false);\n        }\n    };\n\n    useEffect(() => {\n        window.addEventListener(\"scroll\", handleScroll);\n        return () => {\n            window.removeEventListener(\"scroll\", () => handleScroll);\n        };\n    }, []);\n\n    return (\n        <div className={`header ${isSticky ? \"sticky\" : \"\"}`} ref={ref}>\n            <div onClick={() => setSidebar(true)}>\n                <span>Menu</span>\n            </div>\n            <div className=\"logo__link\">\n                <img\n                    alt=\"logo\"\n                    className=\"logo\"\n                    src=\"https://assets.inshorts.com/website_assets/images/logo_inshorts.png\"\n                />\n            </div>\n        </div>\n    );\n}\n\nexport default Header;\n","import React, { useEffect, useState } from \"react\";\nimport \"./SideBar.css\";\nimport { useParams, Link } from \"react-router-dom\";\nconst langs = [\n    {\n        url: \"/en/all\",\n        name: \"English\",\n        code: \"en\",\n    },\n    {\n        url: \"/hi/all\",\n        name: \"हिन्दी\",\n        code: \"hi\",\n    },\n];\n\nconst cats = [\n    { code: \"all\", name: \"All News\" },\n    { code: \"india\", name: \"India\" },\n    { code: \"business\", name: \"Business\" },\n    { code: \"sports\", name: \"Sports\" },\n    { code: \"world\", name: \"World\" },\n    { code: \"politics\", name: \"Politics\" },\n    { code: \"technology\", name: \"Technology\" },\n    { code: \"startup\", name: \"Startup\" },\n    { code: \"entertainment\", name: \"Entertainment\" },\n    { code: \"miscellaneous\", name: \"Miscellaneous\" },\n    { code: \"hatke\", name: \"Hatke\" },\n    { code: \"science\", name: \"Science\" },\n    { code: \"automobile\", name: \"Automobile\" },\n];\n\nfunction SideBar({ sideBar, setSidebar }) {\n    const params = useParams();\n\n    const [langOptions] = useState(langs);\n    const [catOptions] = useState(cats);\n\n    const [language, setLanguage] = useState(params.language || \"en\");\n    const [category, setCategory] = useState(params.category || \"all\");\n\n    useEffect(() => {\n        setSidebar(sideBar);\n    }, [sideBar, setSidebar]);\n\n    return (\n        <>\n            <div\n                className=\"hide-on-med-and-up sidebar-bg\"\n                style={{ display: `${sideBar ? \"block\" : \"none\"}` }}\n                onClick={() => {\n                    setSidebar(false);\n                }}\n            >\n                &nbsp;\n            </div>\n\n            <div\n                className=\"sidebar open\"\n                style={{\n                    overflowY: \"scroll\",\n                    display: `${sideBar ? \"block\" : \"none\"}`,\n                }}\n            >\n                <div className=\"lang-bar\">\n                    <div className=\"lang-selector clickable\">\n                        {langOptions.map((lang) => (\n                            <Link\n                                to={`/${lang.code}/${category}`}\n                                key={lang.code}\n                                onClick={(e) => {\n                                    setLanguage(lang.code);\n                                    setSidebar(false);\n                                }}\n                            >\n                                <div\n                                    className={`lang-${lang.code} ${\n                                        language === lang.code ? `selected` : \"\"\n                                    } `}\n                                >\n                                    {lang.name}\n                                </div>\n                            </Link>\n                        ))}\n                    </div>\n                </div>\n\n                <div>\n                    <div className=\"category-header\">Categories</div>\n                    <ul className=\"category-list\">\n                        {catOptions.map((catopt) => (\n                            <li\n                                className={`active-category ${\n                                    category === catopt.code ? `selected` : \"\"\n                                }`}\n                            >\n                                <Link\n                                    key={catopt.code}\n                                    to={`/${language}/${catopt.code}`}\n                                    onClick={() => {\n                                        setCategory(catopt.code);\n                                        setSidebar(false);\n                                    }}\n                                    className=\"category-link\"\n                                >\n                                    {catopt.name}\n                                </Link>\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default SideBar;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport CardList from \"./CardList\";\nimport Header from \"./Header\";\nimport SideBar from \"./SideBar\";\n\nconst Layout = (props) => {\n    const [sideBar, setSidebar] = useState(false);\n\n    return (\n        <>\n            <SideBar {...props} sideBar={sideBar} setSidebar={setSidebar} />\n            <Header sideBar={sideBar} setSidebar={setSidebar} />\n            <CardList {...props} />\n        </>\n    );\n};\n\nfunction App() {\n    return (\n        <Router>\n            <Route path=\"/:language?/:category?\" component={Layout}></Route>\n        </Router>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}